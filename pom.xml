<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>gov.usgs.cida</groupId>
	<artifactId>geoserver-manager</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>Geoserver Manager</name>
 
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<version.java>1.8</version.java>
		<version.logback>1.1.3</version.logback>
		<version.slf4j>1.1.3</version.slf4j>
		<version.surefire>2.19</version.surefire>
		<version.geoserver>2.8.1</version.geoserver>
	</properties>
	
	<repositories>
		<repository>
			<id>GeoSolutions</id>
			<url>http://maven.geo-solutions.it/</url>
		</repository>
	</repositories>
	
	<profiles>
		<!-- 
		mvn clean install -Pdocker-it
		--> 
		<profile>
			<id>docker-it</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					
					<!-- And DO run the integration tests during the test phase -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${version.surefire}</version>
						<dependencies>
							<dependency>
								<groupId>org.apache.maven.surefire</groupId>
								<artifactId>surefire-junit47</artifactId>
								<version>${version.surefire}</version>
							</dependency>
						</dependencies>
						<configuration>
							<groups>gov.usgs.cida.manager.geoserver.IntegrationTests</groups>
							<systemPropertyVariables>
								<geoserver.host>${docker.containers.geoserver.ports.8080/tcp.host}</geoserver.host>
								<geoserver.port>${docker.containers.geoserver.ports.8080/tcp.port}</geoserver.port>
							</systemPropertyVariables>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
								<configuration>
									<includes>
										<include>**/*.class</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>
					
					<!-- Kick off a Geoserver Docker container. This requires your
					system to have docker or docker-machine installed -->
					<plugin>
						<groupId>net.wouterdanes.docker</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>4.1.0</version>
						<executions>
							<execution>
								<id>package</id>
								<goals>
									<goal>build-images</goal>
								</goals>
								<configuration>
									<images>
										<image>
											<id>isuftin/geoserver</id>
											<dockerFile>${project.basedir}/src/test/resources/docker/Dockerfile</dockerFile>
											<nameAndTag>
												isuftin/geoserver:${version.geoserver}
											</nameAndTag>
											<keep>true</keep>
										</image>
									</images>
								</configuration>
							</execution>
							<execution>
								<id>start</id>
								<goals>
									<goal>start-containers</goal>
								</goals>
								<configuration>
									<forceCleanup>true</forceCleanup>
									<containers>
										<container>
											<id>geoserver</id>
											<image>isuftin/geoserver:${version.geoserver}</image>
											<hostname>geoserver</hostname>
											<waitForStartup>Started SelectChannelConnector@0.0.0.0:8080</waitForStartup>
										</container>
									</containers>
								</configuration>
							</execution>
							<execution>
								<id>stop</id>
								<goals>
									<goal>stop-containers</goal>
								</goals>
								<configuration>
									<logs>${project.build.directory}/logs</logs>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>${version.java}</source>
					<target>${version.java}</target>
				</configuration>
			</plugin>
			
			<!-- Make sure not to run the integration tests during the test phase -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${version.surefire}</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>${version.surefire}</version>
					</dependency>
				</dependencies>
				<configuration>
					<includes>
						<include>**/*.class</include>
					</includes>
					<excludedGroups>gov.usgs.cida.manager.geoserver.IntegrationTests</excludedGroups>
				</configuration>
			</plugin>
		</plugins>
	</build>
	
	<dependencies>
		<dependency>
			<groupId>com.esotericsoftware.yamlbeans</groupId>
			<artifactId>yamlbeans</artifactId>
			<version>1.09</version>
		</dependency>

		<dependency>
			<groupId>it.geosolutions</groupId>
			<artifactId>geoserver-manager</artifactId>
			<version>1.6.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>jcl-over-slf4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		
		<!-- Logging -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>1.7.13</version>
		</dependency>
		<dependency>
			<artifactId>slf4j-api</artifactId>
			<groupId>org.slf4j</groupId>
			<version>1.7.13</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.13</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.2</version>
		</dependency>
	</dependencies>
	
</project>
